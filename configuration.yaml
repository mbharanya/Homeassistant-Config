homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: 47.4008
  longitude: 8.6260

  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 450
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Zurich
  # Customization file
  customize: !include customize.yaml
  auth_providers:
  - type: homeassistant
  - type: legacy_api_password
    api_password: !secret http_password
  - type: trusted_networks
    trusted_networks:
      - 127.0.0.1

zone:
  - name: Work
    latitude: 47.3640412
    longitude: 8.5352484
    icon: mdi:briefcase

# Enables the frontend
frontend: 
  themes: !include_dir_merge_named themes/
  javascript_version: latest

# Enables configuration UI
config:

lovelace:
  mode: yaml
  resources: !include resources.yaml

system_health:

http:
  # Secrets are defined in the file secrets.yaml
  # api_password: !secret http_password
  # Uncomment this if you are using SSL/TLS, running in Docker container, etc.
  use_x_forwarded_for: true
  ssl_certificate: /config/fullchain.pem
  ssl_key: /config/privkey.pem
  trusted_proxies:
    - 192.168.1.22 #Traefik container IP
    - 172.18.0.21
    - 172.18.0.3


pi_hole:
    - host: "192.168.1.30"
      verify_ssl: false

      #vacuum:
      #- platform: xiaomi_miio
      #host: 192.168.1.108
      #token: !secret roborock_token
# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# View all events in a logbook
logbook:

# Enables a map showing the location of tracked devices
map:

# Track the sun
sun:

apcupsd:
  host: 192.168.1.8

python_script:

# led_color_temp:
# zfs_sensor:

mobile_app:

weather:
  - platform: darksky
    api_key: !secret darksky

panel_iframe:
  nodered:
    title: Node-RED
    icon: mdi:sitemap
    url: http://xmb.li:1880
  vscode:
    title: VSCode
    icon: mdi:microsoft-visual-studio-code
    url: https://code.xmb.li
# Weather prediction
sensor:
  - platform: darksky
    api_key: !secret darksky
    forecast:
      - 0
    hourly_forecast:
      - 0
      - 1
    monitored_conditions:
      - summary
      - icon
      - temperature
      - humidity
  - platform: qbittorrent
    url: 'http://192.168.1.22:9111'
    username: !secret qbittorrent_user
    password: !secret qbittorrent_password
  - platform: radarr
    host: '192.168.1.22'
    api_key: !secret radarr_api_key
  - platform: sonarr
    host: '192.168.1.22'
    api_key: !secret sonarr_api_key
    monitored_conditions:
      - upcoming
      - series
  # - platform: sonarr_upcoming_media
  #   api_key: !secret sonarr_api_key
  #   host: '192.168.1.22'
  #   port: 8989
  #   days: 7
  #   ssl: false
  #   max: 10
  # - platform: zfs_sensor
  - platform: systemmonitor
    resources:
      - type: processor_use
      - type: memory_use_percent
      - type: throughput_network_in
        arg: eth0
      - type: throughput_network_out
        arg: eth0
      - type: network_in
        arg: eth0
      - type: network_in
        arg: eth0
  - platform: command_line
    name: Pandora CPU
    unit_of_measurement: "%"
    command: 'nc 192.168.1.8 7778'
    scan_interval: 30
  - platform: command_line
    name: Pandora Memory Use
    unit_of_measurement: "%"
    command: 'nc 192.168.1.8 7779'
    scan_interval: 30
  - platform: time_date
    display_options:
      - 'time'
  - platform: apcupsd
    resources:
      - status
      - bcharge
      - timeleft
      - battv
      - nombattv
  - platform: hddtemp
    host: 192.168.1.8
  - platform: bitcoin
    display_options:
      - exchangerate
  # - platform: coinmarketcap
  #   currency_id: 1027
  #   display_currency: CHF
  # - platform: coinmarketcap
  #   currency_id: 2
  #   display_currency: CHF
  # - platform: coinmarketcap
  #   currency_id: 74
  #   display_currency: CHF
  - platform: mqtt
    name: "Living Room Temperature"
    state_topic: "tele/sonoff/plants/SENSOR"
    unit_of_measurement: '°C'
    value_template: '{{ value_json["AM2301"]["Temperature"] }}'
  - platform: mqtt
    name: "Living Room Humidity"
    state_topic: "tele/sonoff/plants/SENSOR"
    unit_of_measurement: '%'
    value_template: '{{ value_json["AM2301"]["Humidity"] }}'
    icon: mdi:water-percent
  - platform: mqtt
    name: "Bedroom Temperature"
    state_topic: "tele/sonoff/bedroom/SENSOR"
    unit_of_measurement: '°C'
    value_template: '{{ value_json["AM2301"]["Temperature"] }}'
  - platform: mqtt
    name: "Bedroom Humidity"
    state_topic: "tele/sonoff/bedroom/SENSOR"
    unit_of_measurement: '%'
    value_template: '{{ value_json["AM2301"]["Humidity"] }}'
    icon: mdi:water-percent
  - platform: mqtt
    name: "Kitchen Temperature"
    state_topic: "tele/sonoff/grower/SENSOR"
    unit_of_measurement: '°C'
    value_template: '{{ value_json["AM2301"]["Temperature"] }}'
  - platform: mqtt
    name: "Kitchen Humidity"
    state_topic: "tele/sonoff/grower/SENSOR"
    unit_of_measurement: '%'
    value_template: '{{ value_json["AM2301"]["Humidity"] }}'
    icon: mdi:water-percent
  - platform: mqtt
    name: "Hydro 2700K Temperature"
    state_topic: "tele/sonoff/hydro_2700k/SENSOR"
    unit_of_measurement: '°C'
    value_template: '{{ value_json["AM2301"]["Temperature"] }}'
  - platform: mqtt
    name: "Hydro 2700K Humidity"
    state_topic: "tele/sonoff/hydro_2700k/SENSOR"
    unit_of_measurement: '%'
    value_template: '{{ value_json["AM2301"]["Humidity"] }}'
  - platform: mqtt
    name: "PC Room Temperature"
    state_topic: "tele/sonoff/pc_room_camera/SENSOR"
    unit_of_measurement: '°C'
    value_template: '{{ value_json["AM2301"]["Temperature"] }}'
  - platform: mqtt
    name: "PC Room Humidity"
    state_topic: "tele/sonoff/pc_room_camera/SENSOR"
    unit_of_measurement: '%'
    value_template: '{{ value_json["AM2301"]["Humidity"] }}'
    icon: mdi:water-percent
  - platform: mqtt
    name: "Greenhouse Temperature"
    state_topic: "tele/sonoff/greenhouse/SENSOR"
    unit_of_measurement: '°C'
    value_template: '{{ value_json["AM2301"]["Temperature"] }}'
  - platform: mqtt
    name: "Greenhouse Humidity"
    state_topic: "tele/sonoff/greenhouse/SENSOR"
    unit_of_measurement: '%'
    value_template: '{{ value_json["AM2301"]["Humidity"] }}'
    icon: mdi:water-percent
  - platform: mold_indicator
    name: Living Room Mold Chance
    indoor_temp_sensor: sensor.living_room_temperature
    indoor_humidity_sensor: sensor.living_room_humidity
    outdoor_temp_sensor: sensor.dark_sky_temperature
    calibration_factor: 1.157894737
  - platform: mold_indicator
    name: PC Room Mold Chance
    indoor_temp_sensor: sensor.pc_room_temperature
    indoor_humidity_sensor: sensor.pc_room_humidity
    outdoor_temp_sensor: sensor.dark_sky_temperature
    calibration_factor: 1.481481481
  - platform: mold_indicator
    name: Kitchen Mold Chance
    indoor_temp_sensor: sensor.kitchen_temperature
    indoor_humidity_sensor: sensor.kitchen_humidity
    outdoor_temp_sensor: sensor.dark_sky_temperature
    calibration_factor: 1.371428571
  - platform: mold_indicator
    name: Bedroom Mold Chance
    indoor_temp_sensor: sensor.bedroom_temperature
    indoor_humidity_sensor: sensor.bedroom_humidity
    outdoor_temp_sensor: sensor.dark_sky_temperature
    calibration_factor: 1.480769231 
  - platform: mqtt
    state_topic: "/weight/bed/load"
    name: Bed Mass
    unit_of_measurement: "kg"
  - platform: filter
    name: "filtered bed mass"
    entity_id: sensor.bed_mass
    filters:
      - filter: time_simple_moving_average
        window_size: "00:05"
        precision: 0
  - platform: template
    sensors:
      subwoofer_current_power:
        friendly_name: Subwoofer Current power consumption
        unit_of_measurement: 'W'
        value_template: "{{ state_attr('switch.subwoofer',  'current_power_w') | replace('None', 0) }}"

      subwoofer_total_power:
        friendly_name: Subwoofer Accumulated daily power consumption
        unit_of_measurement: 'kWh'
        value_template: "{{ state_attr('switch.subwoofer',  'today_energy_kwh') | replace('None', 0) }}"

  - platform: template
    sensors:
      vacuum_status:
        friendly_name: Status
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        value_template: 'Status: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.status }}'
        icon_template: >
          {% set val =  states.vacuum.xiaomi_vacuum_cleaner.attributes.status  %}
          {% if val == 'Charging' %}
            mdi:battery-charging
          {% elif val == 'Cleaning' %}
            mdi:move-resize
          {% elif val == 'Returning home' %}
            mdi:keyboard-return
          {% elif val == 'Idle' %}
            mdi:dots-horizontal
          {% elif val == 'Paused' %}
            mdi:pause-circle
          {% else %}
            mdi:help-circle
          {% endif %}
      vacuum_fan_speed:
        friendly_name: Fan Speed
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        value_template: 'Mode: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.fan_speed }}'
        icon_template: 'mdi:speedometer'
      vacuum_battery:
        friendly_name: Vacuum Battery
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        value_template: 'Battery: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.battery_level }}'
        unit_of_measurement: '%'
        icon_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.battery_icon }}'
      vacuum_cleaning_time:
        friendly_name: Time of Last Cycle
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.cleaning_time }}'
        icon_template: 'mdi:timer'
      vacuum_cleaned_area:
        friendly_name: Area of Last Cycle
        unit_of_measurement: 'm ²'
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.cleaned_area }}'
        icon_template: 'mdi:ruler'
      vacuum_cleanmainbrush:
        friendly_name: Replace main brush
        unit_of_measurement: 'h'
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        value_template: 'Main Brush: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.main_brush_left }}'
        icon_template: 'mdi:screwdriver'
      vacuum_cleansidebrush:
        friendly_name: Replace side brush
        unit_of_measurement: 'h'
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        value_template: 'Side brush: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.side_brush_left }}'
        icon_template: 'mdi:screwdriver'
      vacuum_cleanfilter:
        friendly_name: Replace filter
        unit_of_measurement: 'h'
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        value_template: 'Filter: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.filter_left }}'
        icon_template: 'mdi:screwdriver'
      vacuum_sensordirtyleft:
        friendly_name: Replace filter
        unit_of_measurement: 'h'
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        value_template: 'Sensor: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.sensor_dirty_left }}'
        icon_template: 'mdi:screwdriver'
      vacuum_do_not_disturb:
        friendly_name: Do Not Disturb
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.do_not_disturb }}'
        icon_template: >
          {% set val =  states.vacuum.xiaomi_vacuum_cleaner.attributes.do_not_disturb  %}
          {% if val == 'on' %}
            mdi:do-not-disturb
          {% else %}
            mdi:do-not-disturb-off
          {% endif %}
      vacuum_operation:
        value_template: 'Operation'
      vacuum_accessories:
        value_template: 'Maintenance'

binary_sensor:
  - platform: threshold
    name: Shed Temperature Below 3.5
    entity_id: sensor.shed_temperature
    lower: 3.5
  - platform: threshold
    name: Shed Temperature Above 10
    entity_id: sensor.shed_temperature
    upper: 10

# Text to speech
tts:
  - platform: google_translate
    service_name: google_say

wake_on_lan:

webostv: 
    host: 192.168.1.102
    name: LG 4K OLED
    turn_on_action:
      service: wake_on_lan.send_magic_packet
      data:
        mac: "20-3D-BD-1B-A3-86"

media_player:
  - platform: plex
  - platform: spotify
    client_id: 521b6f020f9d4923a98c8bdb39889d03
    client_secret: !secret spotify_client_secret
  
mqtt:
  broker: 192.168.1.22
  discovery: true

device_tracker:
  # - platform: unifi
  #   host: 192.168.1.22
  #   username: !secret unifi_user
  #   password: !secret unifi_password
  #   verify_ssl: false

notify:
  - name: pushbullet
    platform: pushbullet
    api_key: !secret pushbullet_api_key
  - name: pushbullet_lis
    platform: pushbullet
    api_key: !secret pushbullet_api_key_lis

light:
  - platform: mqtt
    name: Plants
    state_topic: "stat/sonoff/plants/POWER"
    command_topic: "cmnd/sonoff/plants/POWER"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    retain: true
  - platform: mqtt
    name: Desk LEDs
    state_topic: "stat/sonoff/desk_leds/POWER"
    command_topic: "cmnd/sonoff/desk_leds/POWER"
    brightness_state_topic: "stat/sonoff/desk_leds/DIMMER"
    brightness_command_topic: "cmnd/sonoff/desk_leds/DIMMER"
    brightness_value_template: "{{ value_json.brightness }}"
    brightness_scale: 100
    rgb_state_topic: "stat/sonoff/desk_leds/COLOR"
    rgb_command_topic: "cmnd/sonoff/desk_leds/COLOR"
    rgb_command_template: "{{ '#%02x%02x%02x' | format(red, green, blue) }}"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    retain: true
  - platform: mqtt
    name: TV LEDs
    state_topic: "stat/sonoff/tv_leds/POWER"
    command_topic: "cmnd/sonoff/tv_leds/POWER"
    brightness_state_topic: "stat/sonoff/tv_leds/DIMMER"
    brightness_command_topic: "cmnd/sonoff/tv_leds/DIMMER"
    brightness_value_template: "{{ value_json.brightness }}"
    brightness_scale: 100
    rgb_state_topic: "stat/sonoff/tv_leds/COLOR"
    rgb_command_topic: "cmnd/sonoff/tv_leds/COLOR"
    rgb_command_template: "{{ '#%02x%02x%02x' | format(red, green, blue) }}"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    retain: true
  - platform: mqtt
    name: Kitchen Grower
    state_topic: "stat/sonoff/grower/POWER"
    command_topic: "cmnd/sonoff/grower/POWER"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    retain: true
  - platform: mqtt
    name: Living Room Dinner Table
    state_topic: "stat/sonoff/dinner_table/POWER"
    command_topic: "cmnd/sonoff/dinner_table/POWER"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    retain: true
  - platform: mqtt
    name: "Hydro 2700k"
    state_topic: "stat/sonoff/hydro_2700k/POWER"
    command_topic: "cmnd/sonoff/hydro_2700k/POWER"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    retain: true
  - platform: flux_led
    automatic_add: true
    devices:
      192.168.1.174:
        name: Sofa LEDs
        mode: rgbw
      192.168.1.173:
        name: Bed LEDs
        mode: rgbw
      192.168.1.172:
        name: TV Monitor LEDs
        mode: rgbw

switch:
  - platform: mqtt
    name: "Hydro Bubbler"
    state_topic: "stat/sonoff/hydro_bubbler/POWER"
    command_topic: "cmnd/sonoff/hydro_bubbler/POWER"
  - platform: mqtt
    name: "TV"
    state_topic: "stat/sonoff/tv/POWER"
    command_topic: "cmnd/sonoff/tv/POWER"
  - platform: mqtt
    name: "PC Room Camera"
    state_topic: "stat/sonoff/pc_room_camera/POWER"
    command_topic: "cmnd/sonoff/pc_room_camera/POWER"
  - platform: mqtt
    name: "Hallway Camera"
    state_topic: "stat/sonoff/hallway_camera/POWER"
    command_topic: "cmnd/sonoff/hallway_camera/POWER"
  - platform: mqtt
    name: "Living Room Camera"
    state_topic: "stat/sonoff/living_room_camera/POWER"
    command_topic: "cmnd/sonoff/living_room_camera/POWER"
  - platform: edimax
    name: Subwoofer
    host: 192.168.1.194
    username: admin
    password: kRC9zFHPO1
    # - platform: command_line
    #   switches:
    #     humidifier:
    #       command_on: "curl -X GET 'http://192.168.1.70/relay?state=1'"
    #       command_off: "curl -X GET 'http://192.168.1.70/relay?state=0'"
    #       command_state: "curl -X GET 'http://192.168.1.70/report'"
    #       value_template: '{{ value_json.relay == true }}'
    #       friendly_name: Humidifier
  - platform: flux
    mode: mired
    lights:
      - light.bedroom_corner_3
      - light.bedroom_panel
      - light.hallway_panel
      - light.kitchen_panel
      - light.living_room_panel_3
      - light.living_room_sofa_3
      - light.pc_room_monitors_2
      - light.pc_room_panel_3
      - light.pc_room_3d_printer_2

ffmpeg:

camera:
 - platform: ffmpeg
   name: PC Room Camera
   input: rtsp://192.168.1.164:554/unicast
 - platform: ffmpeg
   name: Living Room Camera
   input: rtsp://192.168.1.165:554/unicast
 - platform: ffmpeg
   name: Hallway Camera
   input: rtsp://192.168.1.166:554/unicast
 - platform: ffmpeg
   name: DaFang
   input: -rtsp_transport tcp -i rtsp://dafang:8554/unicast

input_datetime:
  bedroom_alarm_clock_time:
    name: Bedroom Alarm Clock
    has_date: false
    has_time: true
  kitchen_grower_on:
    name: Grower on
    has_date: false
    has_time: true
  kitchen_grower_off:
    name: Grower off
    has_date: false
    has_time: true
  pc_room_hydro_2700k_on:
    name: Hydro on
    has_date: false
    has_time: true
  pc_room_hydro_2700k_off:
    name: Hydro off
    has_date: false
    has_time: true
  living_room_plants_on:
    name: Plant wall on
    has_date: false
    has_time: true
  living_room_plants_off:
    name: Plant wall off
    has_date: false
    has_time: true

input_boolean:
  in_bed:
    name: Bed Occupancy
    initial: off
    icon: mdi:hotel
  daily_vacuum_first_run:
    name: Daily Vacuum First Run
    initial: 'off'
  disable_daily_vacuum:
    name: Disable Daily Vacuum Automation
    initial: 'off'
  disable_dustbin_notification:
    name: Disable Dustbin Notification
    initial: 'off'

panel_custom:
  - name: floor-panel-v2
    sidebar_title: Floor Plan
    sidebar_icon: mdi:floor-plan
    module_url: /local/custom-floor-panel.js
    config: !include floorplan.yaml


scene: !include scenes.yaml


group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
# Enables support for tracking state changes over time
history: !include history.yaml
